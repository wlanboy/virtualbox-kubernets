# -*- mode: ruby -*-
# vi: set ft=ruby :

# number of worker nodes
NODE_COUNT = 1
# check with ifconfig/ipconfig, "look for Ethernet-Adapter VirtualBox Host-Only Network", choose on in that ip range
CONTROL_IP = "192.168.50.100"
# the private LAN for inter-node communication - this has to be an unique class b network (look at you openvpn subnets too)
KUBE_NETWORK = "10.244.0.0/16"
# kubeadm token generate , used to join members to the kubernets cluster
TOKEN = "qn265f.czo0oiw8o2q5pb7n"
PUBLIC_IP = "192.168.56.100"
# os
BOX_IMAGE = "generic/ubuntu2004"

Vagrant.configure("2") do |config|

   config.vm.define "kubecontrol" do |subconfig|
      subconfig.vm.box = BOX_IMAGE
      subconfig.vm.hostname = "kubecontrol"
      subconfig.vm.box_check_update = false
      subconfig.vm.network "private_network", virtualbox__intnet: true, ip: CONTROL_IP # <-- set flag to avoid Host-Only network - vms have to communicate with each other
      subconfig.vm.network "private_network", ip: PUBLIC_IP # <-- use host-only network to get access from your host

      subconfig.vm.disk :disk, size: "30GB", primary: true

      subconfig.vm.provider "virtualbox" do |vb|
         vb.gui = false
         vb.memory = "4098"
         vb.cpus = 4
         vb.name = "kubecontrol"
      end

      subconfig.vm.provision "file", source: "control.yml", destination: "/home/vagrant/control.yml"
      subconfig.vm.provision "file", source: "kube-flannel.yml", destination: "/home/vagrant/kube-flannel.yml"

      subconfig.vm.provision :shell do |s|
         s.path = 'setup-system.sh'
      end
   
      subconfig.vm.provision :shell do |s|
        s.path = 'setup-packages.sh'
      end
   
      subconfig.vm.provision :shell do |s|
         s.env = {CONTROL_IP:CONTROL_IP, TOKEN:TOKEN, PUBLIC_IP: PUBLIC_IP, KUBE_NETWORK: KUBE_NETWORK}
         s.path = 'setup-kubernets-controlnode.sh'
      end
   end

   (1..NODE_COUNT).each do |i|
      config.vm.define "kubenode#{i}" do |subconfig|
         subconfig.vm.box = BOX_IMAGE
         subconfig.vm.hostname = "kubenode#{i}"
         subconfig.vm.network :private_network, virtualbox__intnet: true, ip: "192.168.50.#{100 + i}"

         subconfig.vm.disk :disk, size: "20GB", primary: true

         subconfig.vm.provider "virtualbox" do |vb|
            vb.gui = false
            vb.memory = "2048"
            vb.cpus = 2
            vb.name = "kubenode#{i}"
         end

         subconfig.vm.provision :shell do |s|
            s.path = 'setup-system.sh'
         end
      
         subconfig.vm.provision :shell do |s|
         s.path = 'setup-packages.sh'
         end
      
         subconfig.vm.provision :shell do |s|
            s.env = {CONTROL_IP:CONTROL_IP, TOKEN:TOKEN}
            s.path = 'setup-node.sh'
         end

      end #subconfig
   end #loop

end
